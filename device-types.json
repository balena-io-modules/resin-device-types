[
	{
		"slug": "beaglebone-black",
		"aliases": [
			"beaglebone"
		],
		"name": "BeagleBone Black",
		"arch": "armv7hf",
		"state": "RELEASED",
		"stateInstructions": {
			"postProvisioning": [
				"The device is performing a shutdown. Please wait until all LEDs are off.",
				"Remove the resin.io installation media.",
				"Remove and re-connect power to the board."
			]
		},
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the BeagleBone Black.",
				"Power up the BeagleBone Black while holding down the small button near the SD slot. You need to keep it pressed until the blue LEDs start flashing wildly."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-BBB.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the BeagleBone Black.",
				"Power up the BeagleBone Black while holding down the small button near the SD slot. You need to keep it pressed until the blue LEDs start flashing wildly."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-BBB.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the BeagleBone Black.",
				"Power up the BeagleBone Black while holding down the small button near the SD slot. You need to keep it pressed until the blue LEDs start flashing wildly."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-BBB.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-BBB.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-BBB.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"yocto": {
			"machine": "beaglebone",
			"image": "resin-image-flasher",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-flasher-beaglebone.resin-sdcard"
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "hummingboard",
		"aliases": [
			"cubox-i"
		],
		"name": "Hummingboard (EXPERIMENTAL)",
		"arch": "armv7hf",
		"state": "EXPERIMENTAL",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Hummingboard.",
				"Connect your Hummingboard to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Hummingboard.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Hummingboard.",
				"Connect your Hummingboard to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Hummingboard.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Hummingboard.",
				"Connect your Hummingboard to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-Hummingboard.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-Hummingboard.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-Hummingboard.md#on-mac-and-linux"
		},
		"supportsBlink": false,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "cubox-i",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-cubox-i.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "intel-edison",
		"aliases": [
			"edison"
		],
		"name": "Intel Edison",
		"arch": "i386",
		"state": "RELEASED",
		"gettingStartedLink": "http://docs.resin.io/#/pages/installing/gettingStarted-Edison.md",
		"instructions": {
			"windows": [
				"Install Windows drivers for Edison from <a href=\"http://downloadmirror.intel.com/24909/eng/IntelEdisonDriverSetup1.2.1.exe\">here</a>",
				"Unplug the Intel Edison board from your system.",
				"Unzip the downloaded Device OS file.",
				"Open a terminal with administrative privileges and execute the following from the unzipped directory:\n<br>\n<code>flashall.bat</code>",
				"Plug the Intel Edison as per the instructions on your terminal.\n<br>\nYou can check the progress of the provisioning on your terminal."
			],
			"osx": [
				"You need <a href=\"https://www.macports.org/\">MacPorts</a> installed on your system.\n<br>\nRun the following to install <code>dfu-util</code>, <code>usbutils</code> and <code>coreutils</code>:\n<code>sudo port install dfu-util@0.7 usbutils coreutils && sudo port activate dfu-util@0.7</code>",
				"Unplug the Intel Edison board from your system.",
				"Unzip the downloaded Device OS file.",
				"Execute the following from the unzipped directory:\n<br>\n<code>sudo ./flashall.sh</code>",
				"Plug the Intel Edison as per the instructions on your terminal.\n<br>\nYou can check the progress of the provisioning on your terminal."
			],
			"linux": [
				"Install <code>dfu-util</code> and <code>coreutils</code> from your distributions repos. For example, for Ubuntu:\n<br>\n<code>apt-get install dfu-util coreutils</code>",
				"Unplug the Intel Edison board from your system.",
				"Unzip the downloaded Device OS file.",
				"Execute the following from the unzipped directory:\n<br>\n<code>sudo ./flashall.sh</code>",
				"Plug the Intel Edison as per the instructions on your terminal.\n<br>\nYou can check the progress of the provisioning on your terminal."
			]
		},
		"yocto": {
			"machine": "edison",
			"image": "resin-image",
			"fstype": "zip",
			"version": "yocto-daisy",
			"deployArtifact": "resin-edison",
			"archive": true
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Type",
						"name": "network",
						"type": "list",
						"choices": [
							"wifi"
						],
						"hidden": true
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"configuration": {
			"config": {
				"image": "config.img",
				"path": "/config.json"
			}
		},
		"initialization": {
			"operations": [
				{
					"command": "run-script",
					"script": "flashall.bat",
					"when": {
						"os": "win32"
					}
				},
				{
					"command": "run-script",
					"script": "flashall.sh",
					"when": {
						"os": "osx"
					}
				},
				{
					"command": "run-script",
					"script": "flashall.sh",
					"when": {
						"os": "linux"
					}
				}
			]
		}
	},
	{
		"slug": "intel-nuc",
		"aliases": [
			"nuc"
		],
		"name": "Intel NUC (PREVIEW)",
		"arch": "amd64",
		"state": "PREVIEW",
		"stateInstructions": {
			"postProvisioning": [
				"The device is performing a shutdown. Please wait until all LEDs are off.",
				"Remove the resin.io installation media.",
				"Press the power on button on your Intel NUC.",
				"Press F2 to enter Setup. Select the UEFI:SATA option under Boot Drive Order, save and exit Setup."
			]
		},
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your USB key. In Win32 Disk Imager, select your USB key in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt USB key and insert into the Intel NUC.",
				"Power up the Intel NUC. Make sure you have a keyboard connected.\nPress the F10 key while BIOS is loading in order to enter the boot menu. Next, select the \"UEFI : USB\" option."
			],
			"osx": [
				"Plug your USB key into your computer and in a terminal run <code>diskutil list</code>. You should see your USB key as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your USB key with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-NUC.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt USB key and insert into the Intel NUC.",
				"Power up the Intel NUC. Make sure you have a keyboard connected.\nPress the F10 key while BIOS is loading in order to enter the boot menu. Next, select the \"UEFI : USB\" option."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your USB key.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your USB key.\nIt will be listed as something like <code>/dev/sdd1</code>.\nThe last part (\"1\") is the partition number,\nso the USB device name is without that suffix: \"/dev/sdd\"\n<br>\nUnmount your USB key with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-NUC.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt USB key and insert into the Intel NUC.",
				"Power up the Intel NUC. Make sure you have a keyboard connected.\nPress the F10 key while BIOS is loading in order to enter the boot menu. Next, select the \"UEFI : USB\" option."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-NUC.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-NUC.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-NUC.md#on-mac-and-linux"
		},
		"yocto": {
			"machine": "nuc",
			"image": "resin-image-flasher",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-flasher-nuc.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "nitrogen6x",
		"aliases": [
			"nitrogen6x"
		],
		"name": "Nitrogen 6X (EXPERIMENTAL)",
		"arch": "armv7hf",
		"state": "EXPERIMENTAL",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Nitrogen 6X.",
				"Connect your Nitrogen 6X to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Nitrogen6x.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Nitrogen 6X.",
				"Connect your Nitrogen 6X to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Nitrogen6x.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Nitrogen 6X.",
				"Connect your Nitrogen 6X to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-Nitrogen6x.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-Nitrogen6x.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-Nitrogen6x.md#on-mac-and-linux"
		},
		"supportsBlink": false,
		"yocto": {
			"machine": "nitrogen6x",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-nitrogen6x.resin-sdcard"
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "odroid-c1",
		"name": "ODROID-C1+ (PREVIEW)",
		"arch": "armv7hf",
		"state": "PREVIEW",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-C1+.",
				"Connect your ODROID-C1+ to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-C1.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-C1+.",
				"Connect your ODROID-C1+ to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-C1.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-C1+.",
				"Connect your ODROID-C1+ to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-C1.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-C1.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-C1.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "odroid-c1",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-odroid-c1.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "odroid-xu4",
		"aliases": [
			"odroid-ux3",
			"odroid-u3+"
		],
		"name": "ODROID-XU4 (PREVIEW)",
		"arch": "armv7hf",
		"state": "PREVIEW",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-XU4.",
				"Connect your ODROID-XU4 to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-XU4.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-XU4.",
				"Connect your ODROID-XU4 to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-XU4.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the ODROID-XU4.",
				"Connect your ODROID-XU4 to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-XU4.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-XU4.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-ODROID-XU4.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "odroid-ux3",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-odroid-ux3.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "parallella",
		"aliases": [
			"parallella-hdmi-resin"
		],
		"name": "Parallella (EXPERIMENTAL)",
		"arch": "armv7hf",
		"state": "EXPERIMENTAL",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Parallella.",
				"Connect your Parallella to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Parallella.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Parallella.",
				"Connect your Parallella to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Parallella.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Parallella.",
				"Connect your Parallella to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-Parallella.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-Parallella.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-Parallella.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"message": "Processor",
				"name": "processorType",
				"type": "list",
				"choices": [
					"Z7010",
					"Z7020"
				]
			},
			{
				"message": "Coprocessor cores",
				"name": "coprocessorCore",
				"type": "list",
				"choices": [
					"16",
					"64"
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "parallella-hdmi-resin",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-parallella-hdmi-resin.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			},
			"operations": [
				{
					"command": "copy",
					"from": {
						"partition": {
							"primary": 1
						},
						"path": "/bitstreams/parallella_e16_headless_gpiose_7010.bit.bin"
					},
					"to": {
						"partition": {
							"primary": 1
						},
						"path": "/parallella.bit.bin"
					},
					"when": {
						"coprocessorCore": "16",
						"processorType": "Z7010"
					}
				},
				{
					"command": "copy",
					"from": {
						"partition": {
							"primary": 1
						},
						"path": "/bitstreams/parallella_e16_headless_gpiose_7020.bit.bin"
					},
					"to": {
						"partition": {
							"primary": 1
						},
						"path": "/parallella.bit.bin"
					},
					"when": {
						"coprocessorCore": "16",
						"processorType": "Z7020"
					}
				},
				{
					"command": "copy",
					"from": {
						"partition": {
							"primary": 1
						},
						"path": "/device-trees/parallella-mmc-boot.dtb"
					},
					"to": {
						"partition": {
							"primary": 1
						},
						"path": "/devicetree.dtb"
					}
				}
			]
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "raspberry-pi",
		"aliases": [
			"raspberrypi"
		],
		"name": "Raspberry Pi",
		"arch": "rpi",
		"state": "RELEASED",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi.",
				"Connect your Raspberry Pi to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi.",
				"Connect your Raspberry Pi to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi.",
				"Connect your Raspberry Pi to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "raspberrypi",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-raspberrypi.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "raspberry-pi2",
		"aliases": [
			"raspberrypi2"
		],
		"name": "Raspberry Pi 2",
		"arch": "armv7hf",
		"state": "RELEASED",
		"isDefault": true,
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi 2.",
				"Connect your Raspberry Pi 2 to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi 2.",
				"Connect your Raspberry Pi 2 to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Raspberry Pi 2.",
				"Connect your Raspberry Pi 2 to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "raspberrypi2",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-raspberrypi2.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "ts4900",
		"name": "Technologic TS-4900 (EXPERIMENTAL)",
		"arch": "armv7hf",
		"state": "EXPERIMENTAL",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Technologic TS-4900.",
				"Connect your Technologic TS-4900 to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-TS-4900.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Technologic TS-4900.",
				"Connect your Technologic TS-4900 to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-TS-4900.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Technologic TS-4900.",
				"Connect your Technologic TS-4900 to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-TS-4900.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-TS-4900.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-TS-4900.md#on-mac-and-linux"
		},
		"supportsBlink": false,
		"yocto": {
			"machine": "ts4900",
			"image": "resin-image-flasher",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-flasher-ts4900.resin-sdcard"
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "via-vab820-quad",
		"aliases": [
			"vab820-quad"
		],
		"name": "VIA VAB 820-quad (PREVIEW)",
		"arch": "armv7hf",
		"state": "PREVIEW",
		"stateInstructions": {
			"postProvisioning": [
				"The device is performing a shutdown. Please wait until the device is offline in the dashboard and disconnect the power cable.",
				"Remove the resin.io installation media.",
				"Set J11 (just next to the micro SD card slot) to position 1-2 (the position closest to the edge of the board).",
				"Re-connect power to the board."
			]
		},
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the VIA VAB 820-quad.",
				"Set J11 (just next to the micro SD card slot) to position 2-3 (the position furthest away from the edge of the board) and then power on the board."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-VIA-VAB820.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the VIA VAB 820-quad.",
				"Set J11 (just next to the micro SD card slot) to position 2-3 (the position furthest away from the edge of the board) and then power on the board."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-VIA-VAB820.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the VIA VAB 820-quad.",
				"Set J11 (just next to the micro SD card slot) to position 2-3 (the position furthest away from the edge of the board) and then power on the board."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-VIA-VAB820.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-VIA-VAB820.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-VIA-VAB820.md#on-mac-and-linux"
		},
		"supportsBlink": false,
		"yocto": {
			"machine": "vab820-quad",
			"image": "resin-image-flasher",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-flasher-vab820-quad.resin-sdcard"
		},
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		},
		"initialization": {
			"options": [
				{
					"message": "Select a drive",
					"type": "drive",
					"name": "drive"
				}
			],
			"operations": [
				{
					"command": "burn"
				}
			]
		}
	},
	{
		"slug": "zynq-xz702",
		"aliases": [
			"zc702-zynq7"
		],
		"name": "Zynq ZC702 (PREVIEW)",
		"arch": "armv7hf",
		"state": "PREVIEW",
		"instructions": {
			"windows": [
				"Install <a href=\"http://sourceforge.net/projects/win32diskimager/\">Win32 Disk Imager</a>.\n<br>\nStart Win32 Disk Imager and navigate to the Device OS <code>.img</code> in your downloads.\nSelect &lt;OS-image-download&gt;.img (but replacing <code>&lt;OS-image-download&gt;</code> with your download name)\nas your “Image File”.'\n<br>\nInsert your SD card. In Win32 Disk Imager, select your SD in the drop down for “Device”\n<br>\nMake 100% sure it is the correct drive and click “Write”.\n<br>\nWait until it's finished writing.",
				"Safely eject the freshly burnt SD card and insert into the Zynq ZC702.",
				"Connect your Zynq ZC702 to the internet, then power it up."
			],
			"osx": [
				"Plug your SD card into your computer and in a terminal run <code>diskutil list</code>. You should see your SD card as <code>/dev/diskN</code>, (N=1,2,3,4…)",
				"Unmount your SD with <code>diskutil umountDisk /dev/diskN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Zynq-ZC702.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Zynq ZC702.",
				"Connect your Zynq ZC702 to the internet, then power it up."
			],
			"linux": [
				"Run <code>df -h</code> to see what devices are currently mounted.\n<br>\nInsert your SD card.\n<br>\nRun <code>df -h</code> again,the device that wasn't there last time is your SD card.\nIt will be listed as something like <code>/dev/mmcblk0p1</code> or <code>/dev/sdd1</code>.\nThe last part (\"p1\" or \"1\" respectively) is the partition number,\nso the SD name is without these \"/dev/mmcblk0\" or \"/dev/sdd\"\n<br>\nUnmount your SD with <code>umount /dev/sddN</code> where N is your SD disk number.",
				"Run <code>sudo dd bs=1m if=~/Downloads/&lt;OS-image-download&gt;.img of=/dev/rdiskN</code>\nbut replacing <code>&lt;OS-image-download&gt;</code> with your download name\nand replacing the <code>of=/dev/rdiskN</code> with the appropriate device name.\n<br>\n<strong>Warning!</strong>&nbsp;This step is dangerous. You can see a full description of this process\n<a href=\"http://docs.resin.io/#/pages/installing/gettingStarted-Zynq-ZC702.md#on-mac-and-linux\">here</a>.",
				"Safely eject the freshly burnt SD card and insert into the Zynq ZC702.",
				"Connect your Zynq ZC702 to the internet, then power it up."
			]
		},
		"gettingStartedLink": {
			"windows": "http://docs.resin.io/#/pages/installing/gettingStarted-Zynq-ZC702.md#windows",
			"osx": "http://docs.resin.io/#/pages/installing/gettingStarted-Zynq-ZC702.md#on-mac-and-linux",
			"linux": "http://docs.resin.io/#/pages/installing/gettingStarted-Zynq-ZC702.md#on-mac-and-linux"
		},
		"supportsBlink": true,
		"options": [
			{
				"isGroup": true,
				"name": "network",
				"message": "Network",
				"options": [
					{
						"message": "Network Connection",
						"name": "network",
						"type": "list",
						"choices": [
							"ethernet",
							"wifi"
						]
					},
					{
						"message": "Wifi SSID",
						"name": "wifiSsid",
						"type": "text",
						"when": {
							"network": "wifi"
						}
					},
					{
						"message": "Wifi Passphrase",
						"name": "wifiKey",
						"type": "password",
						"when": {
							"network": "wifi"
						}
					}
				]
			},
			{
				"isGroup": true,
				"isCollapsible": true,
				"collapsed": true,
				"name": "advanced",
				"message": "Advanced",
				"options": [
					{
						"message": "Check for updates every X minutes",
						"name": "appUpdatePollInterval",
						"type": "number",
						"min": 0,
						"default": 1
					}
				]
			}
		],
		"yocto": {
			"machine": "zc702-zynq7",
			"image": "resin-image",
			"fstype": "resin-sdcard",
			"version": "yocto-fido",
			"deployArtifact": "resin-image-zc702-zynq7.resin-sdcard"
		},
		"configuration": {
			"config": {
				"partition": {
					"primary": 4,
					"logical": 1
				},
				"path": "/config.json"
			}
		}
	}
]